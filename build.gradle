//import java.util.Calendar

plugins {
    id("jacoco")
    id("java")
    // doesn"t work with sonar-packaging
    // id("maven")
    id("org.sonarqube") version "2.7"
    id("com.github.hierynomus.license") version "0.15.0"
    id("com.iadams.sonar-packaging") version "1.0-RC1"
    id("com.github.ben-manes.versions") version "0.20.0"
    id("com.github.gradle-git-version-calculator") version "1.1.0"
}

group = "com.github.1c-syntax"
version = gitVersionCalculator.calculateVersion("v")

repositories {
    mavenCentral()
    maven {
        url = "https://jitpack.io"
    }
}

dependencies {
    provided("org.sonarsource.sonarqube:sonar-plugin-api:7.4")
    compile("com.github.1c-syntax:bsl-language-server:def218172b")
    compile("com.fasterxml.jackson.core:jackson-databind:2.9.8")
    compile("org.jetbrains:annotations:16.0.3")
    compile("com.google.code.findbugs:jsr305:3.0.2")
    // https://mvnrepository.com/artifact/org.sonarsource.analyzer-commons/sonar-analyzer-commons
    compile("org.sonarsource.analyzer-commons:sonar-analyzer-commons:1.10.2.456")

    compile("me.tongfei:progressbar:0.7.2")

    testImplementation("org.junit.jupiter:junit-jupiter-api:5.3.2")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:5.3.2")
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
}

compileJava {
    options.encoding = "UTF-8"
}

test {
    useJUnitPlatform()

    testLogging {
        events("passed", "skipped", "failed")
    }

    reports {
        html.setEnabled(true)
    }

}

jacocoTestReport {
    reports {
        xml.setEnabled(true)
    }
}

license {
    header = rootProject.file("license/HEADER.txt")
    ext["year"] = Calendar.getInstance().get(Calendar.YEAR)
    ext["name"] = "Nikita Gryzlov <nixel2007@gmail.com>"
    ext["project"] = "SonarQube 1C (BSL) Community Plugin"
    strictCheck = true
    mapping("java", "SLASHSTAR_STYLE")
    exclude("**/*.properties")
    exclude("**/*.bsl")
}

sonarqube {
    properties {
        property("sonar.sourceEncoding", "UTF-8")
        property("sonar.host.url", "https://sonarcloud.io")
        property("sonar.organization", "1c-syntax")
        property("sonar.projectKey", "1c-syntax_sonar-bsl-plugin-community")
        property("sonar.projectName", "SonarQube 1C (BSL) Community Plugin")
        property("sonar.exclusions", "**/gen/**/*.*")
    }
}

sonarPackaging {
    pluginKey = "communitybsl"
    pluginClass = "com.github._1c_syntax.sonar.bsl.BSLPlugin"
    pluginName = "1C (BSL) Community Plugin"
    pluginDescription = "Adds support of 1C (BSL) language."

    pluginLicense = "GNU LGPL v3"

    pluginUrl = "https://github.com/1c-syntax/sonar-bsl-plugin-community"
    pluginIssueTrackerUrl = "https://github.com/1c-syntax/sonar-bsl-plugin-community/issues"
    pluginSourceUrl = "https://github.com/1c-syntax/sonar-bsl-plugin-community"
    pluginDevelopers = "Nikita Gryzlov"

    serverUrl = "http://localhost:9000"
    pluginDir = "d:/docker/volumes/sonarqube/plugins"
}

pluginPackaging {
    dependsOn(jar)
}

localDeploy {
    dependsOn(pluginPackaging)
}

task buildAndLocalDeploy() {
    dependsOn(localDeploy)
    doLast {
        exec {
            executable = "curl"
            args = ["-u", "admin:admin", "-X", "POST", sonarPackaging.serverUrl + "/api/system/restart"]
        }
    }
}
