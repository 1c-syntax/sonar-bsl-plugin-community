{
  "Rules": [
    {
      "Code": "2298",
      "Type": "CODE_SMELL",
      "Severity": "CRITICAL",
      "Name": "Использована конструкция Следующий() при проверке того, что результат выполнения запроса не содержит строк.",
      "Description": "<H1>Проверка на пустой результат выполнения запроса</H1><DIV style=\"clear: right; float: right;\">#std438</DIV><BLOCKQUOTE style=\"MARGIN-RIGHT: 0px\" dir=ltr><P><EM>Область применения: управляемое приложение, мобильное приложение, обычное приложение.</EM></P></BLOCKQUOTE>\n<P><a name=\"1\" id=\"1\"></a>1. Проверку того, что результат выполнения запроса не содержит строк следует выполнять с помощью метода <STRONG>Пустой</STRONG>. Поскольку на получение выборки из результата запроса (выгрузка его в таблицу значений) будет затрачиваться дополнительное время. <BR><BR>Неправильно:</P>\n<P class=Programtext>Выборка = Запрос.Выполнить().Выбрать(); <BR>Если Выборка.Следующий() Тогда <BR>&nbsp; Возврат Истина; <BR>Иначе <BR>&nbsp; Возврат Ложь; <BR>КонецЕсли;</P>\n<P>Правильно:</P>\n<P class=Programtext>Возврат НЕ Запрос.Выполнить().Пустой()</P>\n<TABLE class=tip>\n<TBODY>\n<TR>\n<TD>\n<P align=right><EM>Методическая рекомендация (полезный совет)</EM></P>\n<P><a name=\"2\" id=\"2\"></a>2. В то же время если требуется выбрать (или выгрузить) результат запроса, то предварительный вызов метода <STRONG>Пустой</STRONG> не требуется.<BR>Например, вместо:</P>\n<P class=Programtext>РезультатЗапроса&nbsp;= Запрос.Выполнить(); <BR>Если НЕ РезультатЗапроса.Пустой() Тогда // избыточный вызов<BR>&nbsp; Выборка = РезультатЗапроса.Выбрать();&nbsp;<BR>&nbsp;&nbsp;Пока Выборка.Следующий() Цикл<BR>&nbsp;&nbsp;...</P>\n<P>правильно:</P>\n<P class=Programtext>Выборка = Запрос.Выполнить().Выбрать(); <BR>Пока Выборка.Следующий() Цикл<BR>...</P></TD></TR></TBODY></TABLE>",
      "Active": true,
      "NeedForCertificate": false,
      "EffortMinutes": 0
    },
    {
      "Code": "2299",
      "Type": "CODE_SMELL",
      "Severity": "CRITICAL",
      "Name": "Прикладной объект создан с помощью оператора Новый.",
      "Description": "<H1>Программное создание прикладных объектов</H1><DIV style=\"clear: right; float: right;\">#std451</DIV><BLOCKQUOTE style=\"MARGIN-RIGHT: 0px\" dir=ltr><P><EM>Область применения: управляемое приложение, мобильное приложение, обычное приложение.</EM></P></BLOCKQUOTE>\n<P><a name=\"1\" id=\"1\"></a>1. Для программного создания прикладных объектов следует использовать методы соответствующих менеджеров (<STRONG>СоздатьЭлемент</STRONG>, <STRONG>СоздатьДокумент</STRONG>, <STRONG>СоздатьНаборЗаписей</STRONG> и т.д.). </P>\n<P>Для программного создания прикладных объектов, у которых существует соответствующие менеджеры объектов, использование конструктора (оператор встроенного языка <STRONG>Новый</STRONG>) запрещается. <BR><BR>Правильно:</P>\n<P class=Programtext>ДокументПриходная = Документы.ПоступлениеТоваровУслуг.СоздатьДокумент();</P>\n<P>Неправильно:</P>\n<P class=Programtext>ДокументПриходная = Новый(\"ДокументОбъект.ПоступлениеТоваровУслуг\");</P>\n<P><a name=\"2\" id=\"2\"></a>2. При программном создании объекта следует явно вызывать метод объекта <STRONG>Заполнить</STRONG>. Если данных для заполнения нет, то передать значение <STRONG>Неопределено</STRONG>. В этом случае корректно отработают свойства реквизитов объекта <STRONG>\"Значение заполнения\"</STRONG>, будет вызван обработчик <STRONG>ОбработкаЗаполнения</STRONG> и подписки на это событие, как при интерактивной работе с объектом.</P>\n<P>Например, неправильно:</P>\n<P class=Programtext>Папка = Справочники.ПапкиФайлов.СоздатьЭлемент();<BR>// ...<BR>Папка.Записать();</P>\n<P>Правильно:</P>\n<P class=Programtext>Папка = Справочники.ПапкиФайлов.СоздатьЭлемент();<BR>// ...<BR>Папка.Заполнить(Неопределено);<BR>// ...<BR>Папка.Записать();</P>\n<P>Исключением могут быть случаи, когда объект полностью загружается из источника при обмене данными или восстановление базы из резервной копии (загрузка из XML).</P>",
      "Active": true,
      "NeedForCertificate": false,
      "EffortMinutes": 0
    }
  ]
}